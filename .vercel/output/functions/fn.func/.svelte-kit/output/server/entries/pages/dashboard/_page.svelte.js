import { w as writable, c as create_ssr_component, s as subscribe, v as validate_component, d as Log_out } from "../../../chunks/vendor.js";
import "../../../chunks/appwrite.js";
import { GoogleGenerativeAI } from "@google/generative-ai";
import { b as PUBLIC_GEMINI_API_KEY, c as PUBLIC_APPWRITE_ENDPOINT, d as PUBLIC_APPWRITE_PROJECT_ID } from "../../../chunks/public.js";
import { Client, Databases } from "appwrite";
const twitterUser = writable(null);
const RATE_LIMIT_KEY = "twitter_rate_limit";
const storedLimit = typeof window !== "undefined" ? localStorage.getItem(RATE_LIMIT_KEY) : null;
const initialState = storedLimit ? JSON.parse(storedLimit) : { isLimited: false, reset: 0 };
const rateLimit = writable(initialState);
if (typeof window !== "undefined") {
  rateLimit.subscribe((value) => {
    localStorage.setItem(RATE_LIMIT_KEY, JSON.stringify(value));
  });
}
const genAI = new GoogleGenerativeAI(PUBLIC_GEMINI_API_KEY);
genAI.getGenerativeModel({ model: "gemini-1.5-flash" });
const client = new Client().setEndpoint(PUBLIC_APPWRITE_ENDPOINT).setProject(PUBLIC_APPWRITE_PROJECT_ID);
new Databases(client);
const css = {
  code: "@keyframes svelte-m0t82s-pulse-slow{0%,100%{opacity:0.3}50%{opacity:0.6}}@keyframes svelte-m0t82s-float{0%,100%{transform:translateY(0) scale(1)}50%{transform:translateY(-10px) scale(1.05)}}@keyframes svelte-m0t82s-bounce-subtle{0%,100%{transform:translateY(0)}50%{transform:translateY(-2px)}}@keyframes svelte-m0t82s-gradient{0%{background-position:0% 50%}50%{background-position:100% 50%}100%{background-position:0% 50%}}.animate-gradient{background-size:200% 200%;animation:svelte-m0t82s-gradient 3s ease infinite}.animate-bounce-subtle{animation:svelte-m0t82s-bounce-subtle 2s ease-in-out infinite}.animate-float{animation:svelte-m0t82s-float 6s ease-in-out infinite}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script lang=\\"ts\\">import { onMount } from \\"svelte\\";\\nimport { goto } from \\"$app/navigation\\";\\nimport { twitterUser } from \\"$lib/stores/twitter\\";\\nimport { getCurrentSession, deleteCurrentSession, findUserByTwitterId } from \\"$lib/appwrite\\";\\nimport MentionsList from \\"$lib/components/MentionsList.svelte\\";\\nimport { LogOut, Settings, History, MessageSquarePlus } from \\"lucide-svelte\\";\\nimport { fade, fly, slide } from \\"svelte/transition\\";\\nlet loading = true;\\nlet error = \\"\\";\\nlet accessToken = \\"\\";\\nonMount(async () => {\\n  try {\\n    const session = await getCurrentSession();\\n    if (!session) {\\n      await goto(\\"/login\\");\\n      return;\\n    }\\n    if ($twitterUser?.username) {\\n      const userData = await findUserByTwitterId($twitterUser.username);\\n      if (userData) {\\n        accessToken = userData.accessToken;\\n      }\\n    }\\n    loading = false;\\n  } catch (e) {\\n    error = \\"Failed to load dashboard\\";\\n    console.error(\\"Dashboard error:\\", e);\\n    loading = false;\\n  }\\n});\\nconst handleLogout = async () => {\\n  try {\\n    loading = true;\\n    await deleteCurrentSession();\\n    twitterUser.set(null);\\n    await goto(\\"/login\\");\\n  } catch (e) {\\n    error = \\"Failed to logout\\";\\n    console.error(\\"Logout error:\\", e);\\n    loading = false;\\n  }\\n};\\n<\/script>\\n\\n<div class=\\"min-h-screen bg-[#0B1121]\\">\\n  <!-- Header with glass effect and slide animation -->\\n  <header \\n    class=\\"sticky top-0 z-50 bg-[#0C1322]/80 backdrop-blur-xl border-b border-blue-500/10\\"\\n    in:slide={{ duration: 300 }}\\n  >\\n    <div class=\\"container mx-auto px-4 h-16\\">\\n      <div class=\\"flex items-center justify-between h-full\\">\\n        <h1 class=\\"text-xl font-bold text-white\\">XGenAI Dashboard</h1>\\n        <button \\n          class=\\"flex items-center gap-2 px-4 py-2 rounded-full bg-red-500/10 text-red-400 hover:bg-red-500/20 transition-all duration-300 hover:scale-105\\"\\n          on:click={handleLogout}\\n        >\\n          <LogOut class=\\"w-4 h-4\\" />\\n          <span>Logout</span>\\n        </button>\\n      </div>\\n    </div>\\n  </header>\\n\\n  {#if loading}\\n    <div class=\\"flex flex-col items-center justify-center min-h-[80vh]\\"\\n      in:fade={{ duration: 300 }}\\n    >\\n      <div class=\\"w-10 h-10 border-2 border-blue-500 border-t-transparent rounded-full animate-spin mb-4\\"></div>\\n      <p class=\\"text-white/60\\">Loading dashboard...</p>\\n    </div>\\n  {:else if error}\\n    <div class=\\"container mx-auto px-4 py-8\\"\\n      in:fly={{ y: 20, duration: 500 }}\\n    >\\n      <div class=\\"bg-red-500/10 border border-red-500/20 rounded-xl p-6 text-center\\">\\n        <p class=\\"text-red-400 mb-4\\">{error}</p>\\n        <a \\n          href=\\"/login\\" \\n          class=\\"inline-flex items-center gap-2 px-6 py-2 rounded-full bg-blue-500 text-white hover:bg-blue-600 transition-all duration-300 hover:scale-105\\"\\n        >\\n          Back to Login\\n        </a>\\n      </div>\\n    </div>\\n  {:else}\\n    <main class=\\"container mx-auto px-4 py-8\\">\\n      {#if $twitterUser}\\n        <!-- User Info Card with fly animation -->\\n        <div \\n          class=\\"bg-[#0C1322]/50 backdrop-blur-xl border border-blue-500/10 rounded-xl p-8 mb-8 hover:border-blue-500/20 transition-all duration-300 hover:scale-[1.01]\\"\\n          in:fly={{ y: 20, duration: 500 }}\\n        >\\n          <div class=\\"flex items-center gap-6\\">\\n            {#if $twitterUser.profile_image_url}\\n              <img \\n                src={$twitterUser.profile_image_url} \\n                alt={$twitterUser.name} \\n                class=\\"w-20 h-20 rounded-full border-2 border-blue-500/20\\"\\n              />\\n            {/if}\\n            <div>\\n              <h2 class=\\"text-2xl font-bold text-white mb-1\\">{$twitterUser.name}</h2>\\n              <p class=\\"text-white/60\\">@{$twitterUser.username}</p>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <!-- Quick Actions with staggered animations -->\\n        <div class=\\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-8\\">\\n          {#each [\\n            { icon: MessageSquarePlus, label: 'Generate Reply', color: 'blue', active: true },\\n            { icon: History, label: 'View History', color: 'purple', active: false },\\n            { icon: Settings, label: 'Settings', color: 'emerald', active: false }\\n          ] as action, i}\\n            <button \\n              class=\\"group relative bg-[#0C1322]/50 backdrop-blur-xl border border-{action.color}-500/10 rounded-xl p-6 \\n                     hover:border-{action.color}-500/20 transition-all duration-300 hover:scale-[1.02] hover:-translate-y-1\\"\\n              in:fly={{ y: 20, duration: 500, delay: 200 + (i * 100) }}\\n            >\\n              <!-- Animated gradient background -->\\n              <div class=\\"absolute inset-0 opacity-0 group-hover:opacity-100 transition-opacity duration-300 rounded-xl bg-gradient-to-r from-{action.color}-500/10 via-transparent to-transparent animate-gradient\\"></div>\\n              \\n              <!-- Animated glow effect -->\\n              <div class=\\"absolute -inset-px opacity-0 group-hover:opacity-100 transition-opacity duration-300 rounded-xl bg-{action.color}-500/20 blur-lg\\"></div>\\n              \\n              <!-- Content with icon bounce animation -->\\n              <div class=\\"relative flex items-center gap-3\\">\\n                <div class=\\"group-hover:animate-bounce-subtle\\">\\n                  {#if action.color === 'blue'}\\n                    <svelte:component this={action.icon} class=\\"w-5 h-5 text-blue-400\\" />\\n                  {:else if action.color === 'purple'}\\n                    <svelte:component this={action.icon} class=\\"w-5 h-5 text-purple-400\\" />\\n                  {:else}\\n                    <svelte:component this={action.icon} class=\\"w-5 h-5 text-emerald-400\\" />\\n                  {/if}\\n                </div>\\n                \\n                <span class=\\"text-white group-hover:text-{action.color}-400 transition-colors\\">\\n                  {action.label}\\n                </span>\\n                {#if action.active}\\n                  <span class=\\"absolute -top-1 -right-1 w-2 h-2 bg-{action.color}-400 rounded-full animate-pulse\\"></span>\\n                {/if}\\n              </div>\\n            </button>\\n          {/each}\\n        </div>\\n\\n        <!-- Mentions List with fade in -->\\n        <div in:fade={{ duration: 500, delay: 500 }}>\\n          <MentionsList {accessToken} />\\n        </div>\\n      {:else}\\n        <p class=\\"text-white/60 text-center\\" in:fade>No user data available</p>\\n      {/if}\\n    </main>\\n  {/if}\\n\\n  <!-- Animated background effects -->\\n  <div class=\\"fixed inset-0 -z-10\\">\\n    <div class=\\"absolute inset-0 bg-[radial-gradient(circle_at_center,#1e3a8a0a,transparent_70%)] animate-pulse-slow\\"></div>\\n    <div class=\\"absolute top-0 left-0 w-1/2 h-1/2 bg-blue-500/5 blur-[100px] animate-float\\"></div>\\n    <div class=\\"absolute bottom-0 right-0 w-1/2 h-1/2 bg-purple-500/5 blur-[100px] animate-float delay-1000\\"></div>\\n  </div>\\n</div>\\n\\n<style>\\n  @keyframes pulse-slow {\\n    0%, 100% { opacity: 0.3; }\\n    50% { opacity: 0.6; }\\n  }\\n\\n  @keyframes float {\\n    0%, 100% { transform: translateY(0) scale(1); }\\n    50% { transform: translateY(-10px) scale(1.05); }\\n  }\\n\\n  @keyframes bounce-subtle {\\n    0%, 100% { transform: translateY(0); }\\n    50% { transform: translateY(-2px); }\\n  }\\n\\n  @keyframes gradient {\\n    0% { background-position: 0% 50%; }\\n    50% { background-position: 100% 50%; }\\n    100% { background-position: 0% 50%; }\\n  }\\n\\n  :global(.animate-gradient) {\\n    background-size: 200% 200%;\\n    animation: gradient 3s ease infinite;\\n  }\\n\\n  :global(.animate-bounce-subtle) {\\n    animation: bounce-subtle 2s ease-in-out infinite;\\n  }\\n\\n  :global(.animate-float) {\\n    animation: float 6s ease-in-out infinite;\\n  }\\n</style> "],"names":[],"mappings":"AAwKE,WAAW,wBAAW,CACpB,EAAE,CAAE,IAAK,CAAE,OAAO,CAAE,GAAK,CACzB,GAAI,CAAE,OAAO,CAAE,GAAK,CACtB,CAEA,WAAW,mBAAM,CACf,EAAE,CAAE,IAAK,CAAE,SAAS,CAAE,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,CAAG,CAC9C,GAAI,CAAE,SAAS,CAAE,WAAW,KAAK,CAAC,CAAC,MAAM,IAAI,CAAG,CAClD,CAEA,WAAW,2BAAc,CACvB,EAAE,CAAE,IAAK,CAAE,SAAS,CAAE,WAAW,CAAC,CAAG,CACrC,GAAI,CAAE,SAAS,CAAE,WAAW,IAAI,CAAG,CACrC,CAEA,WAAW,sBAAS,CAClB,EAAG,CAAE,mBAAmB,CAAE,EAAE,CAAC,GAAK,CAClC,GAAI,CAAE,mBAAmB,CAAE,IAAI,CAAC,GAAK,CACrC,IAAK,CAAE,mBAAmB,CAAE,EAAE,CAAC,GAAK,CACtC,CAEQ,iBAAmB,CACzB,eAAe,CAAE,IAAI,CAAC,IAAI,CAC1B,SAAS,CAAE,sBAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,QAC9B,CAEQ,sBAAwB,CAC9B,SAAS,CAAE,2BAAa,CAAC,EAAE,CAAC,WAAW,CAAC,QAC1C,CAEQ,cAAgB,CACtB,SAAS,CAAE,mBAAK,CAAC,EAAE,CAAC,WAAW,CAAC,QAClC"}`
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$unsubscribe_twitterUser;
  $$unsubscribe_twitterUser = subscribe(twitterUser, (value) => value);
  $$result.css.add(css);
  $$unsubscribe_twitterUser();
  return `<div class="min-h-screen bg-[#0B1121]"> <header class="sticky top-0 z-50 bg-[#0C1322]/80 backdrop-blur-xl border-b border-blue-500/10"><div class="container mx-auto px-4 h-16"><div class="flex items-center justify-between h-full"><h1 class="text-xl font-bold text-white" data-svelte-h="svelte-1ddv9q9">XGenAI Dashboard</h1> <button class="flex items-center gap-2 px-4 py-2 rounded-full bg-red-500/10 text-red-400 hover:bg-red-500/20 transition-all duration-300 hover:scale-105">${validate_component(Log_out, "LogOut").$$render($$result, { class: "w-4 h-4" }, {}, {})} <span data-svelte-h="svelte-1rheak">Logout</span></button></div></div></header> ${`<div class="flex flex-col items-center justify-center min-h-[80vh]" data-svelte-h="svelte-1czienh"><div class="w-10 h-10 border-2 border-blue-500 border-t-transparent rounded-full animate-spin mb-4"></div> <p class="text-white/60">Loading dashboard...</p></div>`}  <div class="fixed inset-0 -z-10" data-svelte-h="svelte-5luu3t"><div class="absolute inset-0 bg-[radial-gradient(circle_at_center,#1e3a8a0a,transparent_70%)] animate-pulse-slow"></div> <div class="absolute top-0 left-0 w-1/2 h-1/2 bg-blue-500/5 blur-[100px] animate-float"></div> <div class="absolute bottom-0 right-0 w-1/2 h-1/2 bg-purple-500/5 blur-[100px] animate-float delay-1000"></div></div> </div>`;
});
export {
  Page as default
};
